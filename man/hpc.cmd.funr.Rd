% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_bash.R
\name{hpc.cmd.funr}
\alias{hpc.cmd.funr}
\title{Create cmd with do_funr.Rscript}
\usage{
hpc.cmd.funr(f.name = "norm_test", f.arg = "n=5", r.load = RLOAD,
  other.load = "", hpc.time = TIMEPBS, hpc.resource = SMALLPBS,
  hpc.q = NA, submit = FALSE, jobdepend = NULL, verbose = TRUE)
}
\arguments{
\item{f.name}{Function name in quotes [default = norm_test], example function}

\item{f.arg}{Function arguments in the form \code{"arg1=x arg2=y"}}

\item{r.load}{R version to load with \code{module load}}

\item{other.load}{Other software to load with \code{module load}}

\item{hpc.time}{Job resource selection: time [default = TIMEPBS]}

\item{hpc.resource}{Job resource selection: core / node / memory [default = SMALLPBS]}

\item{hpc.q}{PBS queue name [default = NA]}

\item{submit}{Run either with \code{qsub} or \code{bash} [default = FALSE]}

\item{jobdepend}{In the form \code{depend=afterok:previous_jobs}}

\item{verbose}{Write stuff}
}
\value{
List containing script to execute with \code{qsub} or \code{bash}. If \code{submit = TRUE}, run the script. If \code{submit = TRUE} and on HPC, output the PBS_JOBID number
}
\description{
Execute any R function as Rscript, either by wrapping for HPC or as a bash script.
}
\examples{
hpc.cmd.funr("norm_test", "n=3", submit = FALSE)
}
